import { describe, expect, it } from 'vitest'
import { getExportsStatic } from '../src'

describe('ESM', () => {
  it('@antfu/utils', async () => {
    expect((await getExportsStatic('@antfu/utils')).slice(0, 5))
      .toMatchInlineSnapshot(`
        [
          "assert",
          "at",
          "batchInvoke",
          "clamp",
          "clampArrayRange",
        ]
      `)
  })

  it.only('vue', async () => {
    expect((await getExportsStatic('vue')))
      .toMatchInlineSnapshot(`
        [
          "compile",
          "Transition",
          "TransitionGroup",
          "VueElement",
          "createApp",
          "createSSRApp",
          "defineCustomElement",
          "defineSSRCustomElement",
          "hydrate",
          "initDirectivesForSSR",
          "render",
          "useCssModule",
          "useCssVars",
          "vModelCheckbox",
          "vModelDynamic",
          "vModelRadio",
          "vModelSelect",
          "vModelText",
          "vShow",
          "withKeys",
          "withModifiers",
          "BaseTransition",
          "Comment",
          "Fragment",
          "KeepAlive",
          "Static",
          "Suspense",
          "Teleport",
          "Text",
          "callWithAsyncErrorHandling",
          "callWithErrorHandling",
          "cloneVNode",
          "compatUtils",
          "computed",
          "createBlock",
          "createCommentVNode",
          "createElementBlock",
          "createElementVNode",
          "createHydrationRenderer",
          "createPropsRestProxy",
          "createRenderer",
          "createSlots",
          "createStaticVNode",
          "createTextVNode",
          "createVNode",
          "defineAsyncComponent",
          "defineComponent",
          "defineEmits",
          "defineExpose",
          "defineProps",
          "devtools",
          "getCurrentInstance",
          "getTransitionRawChildren",
          "guardReactiveProps",
          "h",
          "handleError",
          "initCustomFormatter",
          "inject",
          "isMemoSame",
          "isRuntimeOnly",
          "isVNode",
          "mergeDefaults",
          "mergeProps",
          "nextTick",
          "onActivated",
          "onBeforeMount",
          "onBeforeUnmount",
          "onBeforeUpdate",
          "onDeactivated",
          "onErrorCaptured",
          "onMounted",
          "onRenderTracked",
          "onRenderTriggered",
          "onServerPrefetch",
          "onUnmounted",
          "onUpdated",
          "openBlock",
          "popScopeId",
          "provide",
          "pushScopeId",
          "queuePostFlushCb",
          "registerRuntimeCompiler",
          "renderList",
          "renderSlot",
          "resolveComponent",
          "resolveDirective",
          "resolveDynamicComponent",
          "resolveFilter",
          "resolveTransitionHooks",
          "setBlockTracking",
          "setDevtoolsHook",
          "setTransitionHooks",
          "ssrContextKey",
          "ssrUtils",
          "toHandlers",
          "transformVNodeArgs",
          "useAttrs",
          "useSSRContext",
          "useSlots",
          "useTransitionState",
          "version",
          "warn",
          "watch",
          "watchEffect",
          "watchPostEffect",
          "watchSyncEffect",
          "withAsyncContext",
          "withCtx",
          "withDefaults",
          "withDirectives",
          "withMemo",
          "withScopeId",
        ]
      `)
  })
})
